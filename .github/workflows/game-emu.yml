name: "game-emu"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: Build And Analyze
    runs-on: ${{ matrix.os }}
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2022]
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup MSVC Environment
      uses: ilammy/msvc-dev-cmd@v1
      if: matrix.os == 'windows-2022'

    - name: Install Ninja (Windows)
      run: choco install ninja
      if: matrix.os == 'windows-2022'

    - name: Install Ninja (Linux)
      run: |
       sudo apt update
       sudo apt install ninja-build
      if: matrix.os == 'ubuntu-20.04'

    # Cache the Submodules (Especially LLVM, it's a huge project that takes a long time to clone)
    - name: Try to get Submodules and Build Directory from Cache
      uses: actions/cache@v2
      id: cache-modules
      with:
       path: | 
        args
        cli
        dynalo
        fmt
        llvm-project
        out
       key: ${{ runner.os }}-${{ hashFiles('.gitmodules') }}

    - name: Update Submodules (if not cached)
      run: |
        git submodule init
        git submodule update
      if: steps.cache-modules.outputs.cache-hit != 'true'

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      if: matrix.os == 'ubuntu-20.04'
      uses: github/codeql-action/init@v1
      with:
        languages: cpp

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/out/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G Ninja

    - name: Build
      run: cmake --build ${{github.workspace}}/out/build

    - name: Perform CodeQL Analysis
      if: matrix.os == 'ubuntu-20.04'
      uses: github/codeql-action/analyze@v1

    - name: Install
      run: |
       cmake --install ${{github.workspace}}/out/build --prefix ${{github.workspace}}/out/install

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v2
      with:
       name: ${{ matrix.os }}-${{ runner.arch }}-build
       path: ${{github.workspace}}/out/install
